<?xml version="1.0" encoding="UTF-8"?>
<!-- Mavenプロジェクトの設定を記述するPOMファイル -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- POMモデルのバージョンを指定 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 親プロジェクトの設定 -->
    <!-- Spring Bootのデフォルト設定を継承 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.0</version>
    </parent>

    <!-- このプロジェクトの設定:グループID,識別子,バージョン -->
    <groupId>org.example</groupId>
    <artifactId>MyRMS</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <!-- プロジェクトのパッケージ形式を指定します -->
    <!-- pom: マルチモジュールプロジェクトの親プロジェクト用に使用されます -->
    <packaging>pom</packaging>

    <!-- モジュールを定義するセクション -->
    <!-- このプロジェクトが親プロジェクトの場合、子モジュールをここに記述します -->
    <modules>
        <module>common</module>
        <module>pojo</module>
        <module>server</module>
    </modules>

    <!-- プロジェクト全体で使用するプロパティ（共通設定）を定義するセクション -->
    <properties>
        <!-- ソースコードの文字エンコーディングをUTF-8に設定します -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Mavenによるレポート出力の文字エンコーディングをUTF-8に設定します -->
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 各種ライブラリのバージョンを指定 -->
        <mybatis.version>3.0.3</mybatis.version>
        <lombok.version>1.18.24</lombok.version>
        <fastjson.version>2.0.28</fastjson.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <mysql.version>8.2.0</mysql.version>
        <druid.version>1.2.16</druid.version>
        <jjwt.version>0.9.1</jjwt.version>
        <pagehelper.version>1.4.6</pagehelper.version>
        <aop.version>3.2.1</aop.version>
        <jaxb.version>2.3.1</jaxb.version>
        <thumbnailator.version>0.4.20</thumbnailator.version>
        <webp-imageio-core.version>0.1.3</webp-imageio-core.version>
    </properties>

    <!-- プロジェクト全体の依存関係を定義するセクション -->
    <!-- このプロジェクトで必要なライブラリやモジュールをここに指定します -->
    <dependencies>
        <!-- Spring Bootの基本依存関係 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!-- テスト用の依存関係 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- MyBatis依存関係 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <!-- Lombok: コードの簡略化のための依存関係 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <!-- FastJSON: JSONデータの処理用ライブラリ -->
        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!-- Apache Commons Lang: 文字列処理などのユーティリティクラス -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <!-- MySQL接続ドライバ -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Druid: データソース管理用 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <!-- JWT: 認証トークンの生成と検証 -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <!-- MyBatis用のPageHelperプラグイン -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>
        <!-- AOP (Aspect Oriented Programming) の依存関係 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <version>${aop.version}</version>
        </dependency>
        <!--java9以降のバージョンではjavax.xml.bindモジュールが削除されているため、手動で依存関係を追加する必要があります。-->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb.version}</version>
        </dependency>
        <!-- 画像のリサイズ、トリミング、フォーマット変換などの機能を提供 -->
        <!-- 簡単な画像処理に適した軽量なJavaライブラリ -->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>${thumbnailator.version}</version>
        </dependency>
        <!-- TwelveMonkeys 核心库 -->
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-core</artifactId>
            <version>3.7.0</version>
        </dependency>
        <!--NanoIdライブラリを導入。
        NanoIdは軽量で高速なランダムID生成ライブラリで、デフォルトでは21文字の一意なIDを生成します。-->
        <dependency>
            <groupId>com.aventrix.jnanoid</groupId>
            <artifactId>jnanoid</artifactId>
            <version>2.0.0</version>
        </dependency>
        <!--  Reactorはリアクティブプログラミングをサポートするためのライブラリです。
        主に非同期ストリーム処理やリアルタイムデータ通信の実装に使用されます。-->
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>3.5.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.5.2</version> <!-- 检查最新版本 -->
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>3.5.2</version> <!-- 检查最新版本 -->
        </dependency>

        <!-- 集成beetl -->
        <dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>beetl-framework-starter</artifactId>
            <version>1.2.30.RELEASE</version>
        </dependency>

        <!-- 集成hutool工具类简便操作 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.3.10</version>
        </dependency>

        <!--添加该依赖后，你可以在实体类中使用如 @NotEmpty、@NotBlank、@Valid 等注解进行数据校验。-->
        <!-- 自动引入 Bean Validation 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
    </dependencies>
</project>
